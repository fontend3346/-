import { onMounted, ref, reactive, getCurrentInstance, onBeforeMount, watch } from "vue";
import { Emits, Props } from "./interfaces";
import * as echarts from "echarts";
// 操作
export const useHandler = (props: Props, emit: Emits) => {
  const {
    appContext: {
      config: { globalProperties },
    },
  } = getCurrentInstance() as any;
  let myChart: any = ref();
  const state = reactive({
    data1: [
      ['2019-11-1 00:00:01',],

      ['2019-11-1 01:00:20', -0.03],
      ['2019-11-1 01:03:20', -0.012],
      ['2019-11-1 01:06:20', -0.024],
      ['2019-11-1 01:09:20', -0.025],
      ['2019-11-1 01:12:20', -0.021],
      ['2019-11-1 01:15:20', 0.032],
      ['2019-11-1 01:18:20', 0.073],
      ['2019-11-1 01:21:20', 0.025],
      ['2019-11-1 01:24:20', -0.05],
      ['2019-11-1 01:27:20', -0.044],
      ['2019-11-1 01:30:20', -0.032],
      ['2019-11-1 01:33:20', -0.012],
      ['2019-11-1 01:36:20', -0.089],
      ['2019-11-1 01:39:20', -0.031],
      ['2019-11-1 01:42:20', 0.053],
      ['2019-11-1 01:45:20', 0.082],
      ['2019-11-1 01:48:20', 0.036],
      ['2019-11-1 01:51:20', 0.094],
      ['2019-11-1 01:54:20', 0.054],
      ['2019-11-1 01:57:20', 0.032],

      ['2019-11-1 02:00:20', -0.03],
      ['2019-11-1 02:03:20', -0.06],
      ['2019-11-1 02:06:20', -0.08],
      ['2019-11-1 02:09:20', -0.05],
      ['2019-11-1 02:12:20', -0.04],
      ['2019-11-1 02:15:20', 0.032],
      ['2019-11-1 02:18:20', 0.073],
      ['2019-11-1 02:21:20', 0.025],
      ['2019-11-1 02:24:20', -0.01],
      ['2019-11-1 02:27:20', -0.04],
      ['2019-11-1 02:30:20', -0.03],
      ['2019-11-1 02:33:20', -0.01],
      ['2019-11-1 02:36:20', -0.08],
      ['2019-11-1 02:39:20', -0.03],
      ['2019-11-1 02:42:20', 0.053],
      ['2019-11-1 02:45:20', 0.082],
      ['2019-11-1 02:48:20', 0.036],
      ['2019-11-1 02:51:20', 0.094],
      ['2019-11-1 02:54:20', 0.054],
      ['2019-11-1 02:57:20', 0.032],

      ['2019-11-1 03:57:20',],


      ['2019-11-1 13:00:20', -0.03],
      ['2019-11-1 13:03:20', -0.06],
      ['2019-11-1 13:06:20', -0.08],
      ['2019-11-1 13:09:20', -0.05],
      ['2019-11-1 13:12:20', -0.04],
      ['2019-11-1 13:15:20', 0.032],
      ['2019-11-1 13:18:20', 0.073],
      ['2019-11-1 13:21:20', 0.025],
      ['2019-11-1 13:24:20', -0.006],
      ['2019-11-1 13:27:20', -0.04],
      ['2019-11-1 13:30:20', -0.03],
      ['2019-11-1 13:33:20', -0.01],
      ['2019-11-1 13:36:20', -0.08],
      ['2019-11-1 13:39:20', -0.03],
      ['2019-11-1 13:42:20', 0.053],
      ['2019-11-1 13:45:20', 0.082],
      ['2019-11-1 13:48:20', 0.036],
      ['2019-11-1 13:51:20', 0.094],
      ['2019-11-1 13:54:20', 0.054],
      ['2019-11-1 13:57:20', 0.032],


      ['2019-11-1 14:00:20', -0.03],
      ['2019-11-1 14:03:20', -0.06],
      ['2019-11-1 14:06:20', -0.08],
      ['2019-11-1 14:09:20', -0.05],
      ['2019-11-1 14:12:20', -0.04],
      ['2019-11-1 14:15:20', 0.32],
      ['2019-11-1 14:18:20', 0.073],
      ['2019-11-1 14:21:20', 0.025],
      ['2019-11-1 14:24:20', -0.09],
      ['2019-11-1 14:27:20', -0.04],
      ['2019-11-1 14:30:20', -0.03],
      ['2019-11-1 14:33:20', -0.01],
      ['2019-11-1 14:36:20', -0.08],
      ['2019-11-1 14:39:20', -0.03],
      ['2019-11-1 14:42:20', 0.03],
      ['2019-11-1 14:45:20', 0.082],
      ['2019-11-1 14:48:20', 0.036],
      ['2019-11-1 14:51:20', 0.094],
      ['2019-11-1 14:54:20', 0.054],
      ['2019-11-1 14:57:20', 0.032],


      ['2019-11-1 15:00:20', -0.03],
      ['2019-11-1 15:03:20', -0.03],
      ['2019-11-1 15:06:20', -0.08],
      ['2019-11-1 15:09:20', -0.05],
      ['2019-11-1 15:12:20', -0.04],
      ['2019-11-1 15:15:20', 0.032],
      ['2019-11-1 15:18:20', 0.073],
      ['2019-11-1 15:21:20', 0.0025],
      ['2019-11-1 15:24:20', 0.007],
      ['2019-11-1 15:27:20', -0.04],
      ['2019-11-1 15:30:20', -0.06],
      ['2019-11-1 15:33:20', -0.01],
      ['2019-11-1 15:36:20', -0.08],
      ['2019-11-1 15:39:20', -0.03],
      ['2019-11-1 15:42:20', 0.03],
      ['2019-11-1 15:45:20', 0.082],
      ['2019-11-1 15:48:20', 0.036],
      ['2019-11-1 15:51:20', -0.094],
      ['2019-11-1 15:54:20', 0.054],
      ['2019-11-1 15:57:20', 0.032],

      ['2019-11-1 16:00:20', -0.03],
      ['2019-11-1 16:03:20', -0.03],
      ['2019-11-1 16:06:20', 0.08],
      ['2019-11-1 16:09:20', 0.05],
      ['2019-11-1 16:12:20', -0.04],
      ['2019-11-1 16:15:20', 0.032],
      ['2019-11-1 16:18:20', -0.073],
      ['2019-11-1 16:21:20', -0.025],
      ['2019-11-1 16:24:20', 0.02],
      ['2019-11-1 16:27:20', 0.04],
      ['2019-11-1 16:30:20', 0.06],
      ['2019-11-1 16:33:20', -0.1],
      ['2019-11-1 16:36:20', -0.08],
      ['2019-11-1 16:39:20', -0.3],
      ['2019-11-1 16:42:20', 0.03],
      ['2019-11-1 16:45:20', 0.082],
      ['2019-11-1 16:48:20', 0.036],
      ['2019-11-1 16:51:20', -0.094],
      ['2019-11-1 16:54:20', 0.054],
      ['2019-11-1 16:57:20', -0.032],

      ['2019-11-1 17:00:20', -0.03],
      ['2019-11-1 17:03:20', -0.03],
      ['2019-11-1 17:06:20', 0.08],
      ['2019-11-1 17:09:20', 0.05],
      ['2019-11-1 17:12:20', -0.04],
      ['2019-11-1 17:15:20', -0.032],
      ['2019-11-1 17:18:20', -0.03],
      ['2019-11-1 17:21:20', 0.025],
      ['2019-11-1 17:24:20', 0.06],
      ['2019-11-1 17:27:20', -0.04],
      ['2019-11-1 17:30:20', -0.06],
      ['2019-11-1 17:33:20', 0.01],
      ['2019-11-1 17:36:20', 0.08],
      ['2019-11-1 17:39:20', 0.03],
      ['2019-11-1 17:42:20', 0.03],
      ['2019-11-1 17:45:20', 0.082],
      ['2019-11-1 17:48:20', 0.036],
      ['2019-11-1 17:51:20', -0.094],
      ['2019-11-1 17:54:20', -0.054],
      ['2019-11-1 17:57:20', -0.032],

      ['2019-11-1 18:00:20', -0.03],
      ['2019-11-1 18:03:20', -0.03],
      ['2019-11-1 18:06:20', 0.08],
      ['2019-11-1 18:09:20', 0.05],
      ['2019-11-1 18:12:20', -0.04],
      ['2019-11-1 18:15:20', 0.032],
      ['2019-11-1 18:18:20', 0.033],
      ['2019-11-1 18:21:20', 0.025],
      ['2019-11-1 18:24:20', -0.06],
      ['2019-11-1 18:27:20', -0.064],
      ['2019-11-1 18:30:20', 0.066],
      ['2019-11-1 18:33:20', -0.01],
      ['2019-11-1 18:36:20', -0.08],
      ['2019-11-1 18:39:20', 0.03],
      ['2019-11-1 18:42:20', 0.03],
      ['2019-11-1 18:45:20', -0.082],
      ['2019-11-1 18:48:20', 0.036],
      ['2019-11-1 18:51:20', 0.094],
      ['2019-11-1 18:54:20', 0.054],
      ['2019-11-1 18:57:20', 0.032],

      ['2019-11-2 00:00:00',],


    ],
  })

  //echart数据
  const lineChart = reactive({
    // 图例组件
    legend: [
      {
        top: "7%",
        right: "8%",
        textStyle: {
          fontSize: 12, //字体大小
          color: "#" //字体颜色（图例与图例文字配色保持一致）
        },
        data: [
          {
            name: "B1I/B3I"
          }
        ]
      },

    ],
    tooltip: {
      trigger: 'axis'
    },
    // 直角坐标系内绘图网格
    grid: {
      left: "6%",
      right: "6%", //坐标轴图表在echartbox中的位置
      top: "15%",
      containLabel: true,
      show: true,
      // x: 120,
      // y: 70,
      // x2: 120,
      // y2: 70
    },
    xAxis: {
      // color: "#98dcff",
      name: "时间",
      type: "time",
      data: ["10", "20", "30", "40", "50", "60", "70", "80", "90"],
      nameTextStyle: {
        padding: [20, 0, 0, 0],
        fontSize: 18,
        color: "#98dcff"
      },
      nameLocation: "middle",
      axisLabel: {
        textStyle: {
          color: "#98dcff", //更改坐标轴文字颜色
          fontSize: 13, //更改坐标轴文字大小
        },
      },
      axisLine: {
        show: true,
        onZero: false, //不在y轴的零刻度线显隐
      },
    },
    yAxis: [
      {
        type: "value",
        name: "变化率/m/min",
        nameTextStyle: {
          // padding: [0, 0, -55, -150]
          fontSize: 18,
          color: "#98dcff"
        },
        splitLine: {
          show: false, //Y轴背景线
          lineStyle: {
            color: "#b7b7b8",
            type: "dashed",
          },
        },
        axisTick: {
          show: true,  //坐标轴刻度线
          textStyle: {
            color: "#98dcff", //更改坐标轴文字颜色
          },
        },



        min: -0.6,
        max: 0.6,
        splitNumber: 6, //设置坐标轴的分割段数
        interval: 0.2, // 标轴分割间隔
        axisLabel: {
          formatter: function (v) {
            return v.toFixed(1); //0表示小数为0位，1表示1位小数，2表示2位小数
          },
          textStyle: {
            color: "#98dcff", //更改坐标轴文字颜色
            fontSize: 13, //更改坐标轴文字大小
          },
          // color: function (value, index) {
          //   return value >= 1000 ? "red" : "green";
          // }
        }
      },
    ],
    series: [
      {
        name: "B1I/B3I",
        type: "line",
        color: ["#eb9f0d"],
        symbol: "circle",
        symbolSize: 7,
        smooth: false,
        data: state.data1
      },
    ]
  });
  //折线图线条样式
  const echartSymbol = ['circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow', 'none'];
  const initEchart = () => {
    let myChartDom = myChart.value;
    let myEchart = echarts.init(myChartDom);
    myEchart.setOption(lineChart)
    // myEchart.setOption(props.options)

  }
  // watch(
  //   () => props.options,
  //   (newValue, oldValue) => { initEchart(); },
  //   { deep: true, }
  // );


  onMounted(() => {
    initEchart();
  });

  // onBeforeMount(() => {
  //     isTime();
  //   });

  return {
    initEchart, myChart, state, lineChart,
  };
};
